// <auto-generated />
using System;
using MP2_Asset_tracking_EF_Ole.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MP2_Asset_tracking_EF_Ole.Migrations
{
    [DbContext(typeof(AssetsDB))]
    [Migration("20221012094929_CountryNumeric")]
    partial class CountryNumeric
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MP2_Asset_tracking_EF_Ole.Models.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DollarPrice")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndOfLife")
                        .HasColumnType("datetime2");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfficeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OfficeId");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("MP2_Asset_tracking_EF_Ole.Models.Country", b =>
                {
                    b.Property<string>("Alpha2")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Alpha3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencySymbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numeric")
                        .HasColumnType("int");

                    b.HasKey("Alpha2");

                    b.HasIndex("CurrencySymbol");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("MP2_Asset_tracking_EF_Ole.Models.Currency", b =>
                {
                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("ExchangeFactor")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Symbol");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("MP2_Asset_tracking_EF_Ole.Models.Office", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Alpha2")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Alpha2");

                    b.ToTable("Officies");
                });

            modelBuilder.Entity("MP2_Asset_tracking_EF_Ole.Models.Asset", b =>
                {
                    b.HasOne("MP2_Asset_tracking_EF_Ole.Models.Office", "Office")
                        .WithMany("assets")
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Office");
                });

            modelBuilder.Entity("MP2_Asset_tracking_EF_Ole.Models.Country", b =>
                {
                    b.HasOne("MP2_Asset_tracking_EF_Ole.Models.Currency", "Currency")
                        .WithMany("Countries")
                        .HasForeignKey("CurrencySymbol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("MP2_Asset_tracking_EF_Ole.Models.Office", b =>
                {
                    b.HasOne("MP2_Asset_tracking_EF_Ole.Models.Country", "Country")
                        .WithMany("Offices")
                        .HasForeignKey("Alpha2")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("MP2_Asset_tracking_EF_Ole.Models.Country", b =>
                {
                    b.Navigation("Offices");
                });

            modelBuilder.Entity("MP2_Asset_tracking_EF_Ole.Models.Currency", b =>
                {
                    b.Navigation("Countries");
                });

            modelBuilder.Entity("MP2_Asset_tracking_EF_Ole.Models.Office", b =>
                {
                    b.Navigation("assets");
                });
#pragma warning restore 612, 618
        }
    }
}
